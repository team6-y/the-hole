//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.3
//     from Assets/Movement/Scripts/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""VR"",
            ""id"": ""b3022c17-3bcc-47e1-86ba-0ac1fed65a29"",
            ""actions"": [
                {
                    ""name"": ""Direction"",
                    ""type"": ""Value"",
                    ""id"": ""3b84fea9-4b2a-460a-914f-c206d86321f2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ShootR"",
                    ""type"": ""Button"",
                    ""id"": ""d56064ea-1f7b-4730-88ed-de2b0a4f8d40"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShootL"",
                    ""type"": ""Button"",
                    ""id"": ""1e185459-6ecf-4e28-a493-5949f492b522"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a70bbb1a-192a-4046-bfe7-72518d0b941a"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Direction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""13101788-8498-4a6d-8633-a38c6783fefc"",
                    ""path"": ""<XRController>{RightHand}/thumbstick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Direction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e26622b5-031c-4010-8529-cb0d1b4611f8"",
                    ""path"": ""<OculusTouchController>{RightHand}/thumbstick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Direction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad43c487-382a-4187-8a3b-a7cd22fce971"",
                    ""path"": ""<ViveController>{RightHand}/trackpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Direction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0680cf7e-c25f-4753-b830-0d3c9e4e6297"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShootR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9a2bb638-d50d-406d-9f66-19ece84aac26"",
                    ""path"": ""<XRController>{RightHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShootR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""67335f39-5350-4af8-b772-d95bbab17932"",
                    ""path"": ""<XRController>{RightHand}/triggerButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShootR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""248cf1b0-deb2-4896-8a24-a594287f4945"",
                    ""path"": ""<OculusTouchController>{RightHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShootR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fa0a3335-7625-433b-b6e3-bb0537ff8823"",
                    ""path"": ""<ViveController>{RightHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShootR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""640887c8-8ccb-4a34-b698-5f0d746347dd"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShootL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ae4be86-3199-4b86-8499-f1233740e1b7"",
                    ""path"": ""<XRController>{LeftHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShootL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""215d63c6-5e6a-4d90-b70a-e88632476d04"",
                    ""path"": ""<XRController>{LeftHand}/triggerButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShootL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d4fc3c27-eaab-4053-ab07-d132cba0d598"",
                    ""path"": ""<OculusTouchController>{LeftHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShootL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""88c4b01e-268e-49a3-8396-1303c2a39b1d"",
                    ""path"": ""<ViveController>{LeftHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShootL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // VR
        m_VR = asset.FindActionMap("VR", throwIfNotFound: true);
        m_VR_Direction = m_VR.FindAction("Direction", throwIfNotFound: true);
        m_VR_ShootR = m_VR.FindAction("ShootR", throwIfNotFound: true);
        m_VR_ShootL = m_VR.FindAction("ShootL", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // VR
    private readonly InputActionMap m_VR;
    private IVRActions m_VRActionsCallbackInterface;
    private readonly InputAction m_VR_Direction;
    private readonly InputAction m_VR_ShootR;
    private readonly InputAction m_VR_ShootL;
    public struct VRActions
    {
        private @PlayerControls m_Wrapper;
        public VRActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Direction => m_Wrapper.m_VR_Direction;
        public InputAction @ShootR => m_Wrapper.m_VR_ShootR;
        public InputAction @ShootL => m_Wrapper.m_VR_ShootL;
        public InputActionMap Get() { return m_Wrapper.m_VR; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(VRActions set) { return set.Get(); }
        public void SetCallbacks(IVRActions instance)
        {
            if (m_Wrapper.m_VRActionsCallbackInterface != null)
            {
                @Direction.started -= m_Wrapper.m_VRActionsCallbackInterface.OnDirection;
                @Direction.performed -= m_Wrapper.m_VRActionsCallbackInterface.OnDirection;
                @Direction.canceled -= m_Wrapper.m_VRActionsCallbackInterface.OnDirection;
                @ShootR.started -= m_Wrapper.m_VRActionsCallbackInterface.OnShootR;
                @ShootR.performed -= m_Wrapper.m_VRActionsCallbackInterface.OnShootR;
                @ShootR.canceled -= m_Wrapper.m_VRActionsCallbackInterface.OnShootR;
                @ShootL.started -= m_Wrapper.m_VRActionsCallbackInterface.OnShootL;
                @ShootL.performed -= m_Wrapper.m_VRActionsCallbackInterface.OnShootL;
                @ShootL.canceled -= m_Wrapper.m_VRActionsCallbackInterface.OnShootL;
            }
            m_Wrapper.m_VRActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Direction.started += instance.OnDirection;
                @Direction.performed += instance.OnDirection;
                @Direction.canceled += instance.OnDirection;
                @ShootR.started += instance.OnShootR;
                @ShootR.performed += instance.OnShootR;
                @ShootR.canceled += instance.OnShootR;
                @ShootL.started += instance.OnShootL;
                @ShootL.performed += instance.OnShootL;
                @ShootL.canceled += instance.OnShootL;
            }
        }
    }
    public VRActions @VR => new VRActions(this);
    public interface IVRActions
    {
        void OnDirection(InputAction.CallbackContext context);
        void OnShootR(InputAction.CallbackContext context);
        void OnShootL(InputAction.CallbackContext context);
    }
}
